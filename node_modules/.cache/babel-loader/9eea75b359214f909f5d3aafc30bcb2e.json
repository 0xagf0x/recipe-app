{"ast":null,"code":"var _jsxFileName = \"/Users/cbuckley/react/Recipe App/src/Recipe.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Typography, Link, CircularProgress, Button } from \"@material-ui/core\";\nimport { toFirstCharUppercase } from \"./constants\";\nimport axios from \"axios\";\nimport mockData from './mockData';\n\nconst Recipe = props => {\n  const {\n    match,\n    history\n  } = props;\n  const {\n    params\n  } = match;\n  const {\n    recipeID\n  } = params;\n  const [recipe, setRecipe] = useState(mockData);\n  useEffect(() => {\n    axios.get(`./Mock`).then(function (response) {\n      const {\n        data\n      } = response;\n      const {\n        results\n      } = data;\n      const newRecipeData = {};\n      results.forEach((recipe, index) => {\n        newRecipeData[index + 1] = {\n          id: index + 1,\n          name: recipe.name\n        };\n      });\n      setRecipe(recipeID);\n    });\n  }, []);\n\n  const generateRecipeJSX = recipe => {\n    const {\n      name,\n      id,\n      ingredients,\n      directions,\n      image\n    } = recipe;\n    const fullImageUrl = {\n      image\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \" \", name, \" \"), /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: \"300px\",\n        height: \"300px\"\n      },\n      src: fullImageUrl,\n      alt: fullImageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Ingredients: \", ingredients, \" \"), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Directions: \", directions, \" \"));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, recipe === undefined && /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 32\n    }\n  }), recipe !== undefined && recipe && generateRecipeJSX(recipe), recipe === false && /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 28\n    }\n  }, \" Recipe not found\"), recipe !== undefined && /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => history.push(\"/\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Back\"));\n};\n\nexport default Recipe;","map":{"version":3,"sources":["/Users/cbuckley/react/Recipe App/src/Recipe.js"],"names":["React","useEffect","useState","Typography","Link","CircularProgress","Button","toFirstCharUppercase","axios","mockData","Recipe","props","match","history","params","recipeID","recipe","setRecipe","get","then","response","data","results","newRecipeData","forEach","index","id","name","generateRecipeJSX","ingredients","directions","image","fullImageUrl","width","height","undefined","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Typography, Link, CircularProgress, Button } from \"@material-ui/core\";\nimport { toFirstCharUppercase } from \"./constants\";\nimport axios from \"axios\";\nimport mockData from './mockData';\n\n\n\nconst Recipe = (props) => {\n  const { match, history } = props;\n  const { params } = match;\n  const { recipeID } = params;\n  const [recipe, setRecipe] = useState(mockData);\n\n  useEffect(() => {\n    axios\n      .get(`./Mock`)\n      .then(function (response) {\n        const { data } = response;\n        const { results } = data;\n        const newRecipeData = {};\n        results.forEach((recipe, index) => {\n          newRecipeData[index + 1] = {\n            id: index + 1,\n            name: recipe.name,\n          };\n        });\n        setRecipe(recipeID);\n      });\n  }, []);\n\n\n\n  const generateRecipeJSX = (recipe) => {\n    const { name, id, ingredients, directions, image} = recipe;\n    const fullImageUrl = {image};\n    return (\n      <>\n        <Typography variant=\"h3\"> {name} </Typography>\n        <img style={{ width: \"300px\", height: \"300px\" }} src={fullImageUrl} alt={fullImageUrl} />\n        <Typography>Ingredients: {ingredients} </Typography>\n        <Typography>Directions: {directions} </Typography>\n      </>\n    );\n  };\n  return (\n    <>\n      {recipe === undefined && <CircularProgress />}\n      {recipe !== undefined && recipe && generateRecipeJSX(recipe)}\n      {recipe === false && <Typography> Recipe not found</Typography>}\n      {recipe !== undefined && (\n        <Button variant=\"contained\" onClick={() => history.push(\"/\")}>\n          Back\n        </Button>\n      )}\n    </>\n  );\n};\n\n\nexport default Recipe;"]},"metadata":{},"sourceType":"module"}