{"ast":null,"code":"var _jsxFileName = \"/Users/cbuckley/Desktop/recipe-app/src/Recipe.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Typography, Link, CircularProgress, Button } from \"@material-ui/core\";\nimport { toFirstCharUppercase } from \"./constants\";\nimport axios from \"axios\";\nimport mockData from './mockData';\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(() => ({\n  missingContainer: {\n    width: '500px',\n    margin: 'auto',\n    marginTop: '10%'\n  },\n  missingText: {\n    textAlign: 'center',\n    fontFamily: 'helvetica',\n    fontSize: '32px'\n  },\n  missingBackButton: {\n    backgroundColor: 'lightgrey',\n    margin: 'auto',\n    display: 'flex',\n    marginTop: '2rem'\n  }\n}));\n\nconst Recipe = props => {\n  const classes = useStyles();\n  const {\n    match,\n    history\n  } = props;\n  const {\n    params\n  } = match;\n  const {\n    recipeID\n  } = params;\n  const [recipe, setRecipe] = useState(mockData);\n  useEffect(() => {\n    axios.get(recipeID).then(function (response) {\n      const {\n        data\n      } = response;\n      setRecipe(data);\n    }).catch(function (error) {\n      setRecipe(false);\n    });\n  }, [recipeID]);\n\n  const generateRecipeJSX = recipe => {\n    const {\n      name,\n      ingredients,\n      directions,\n      image\n    } = recipe;\n    const fullImageUrl = {\n      image\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \" \", name, \" \"), /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: \"300px\",\n        height: \"300px\"\n      },\n      src: fullImageUrl,\n      alt: fullImageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Ingredients: \", ingredients, \" \"), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Directions: \", directions, \" \"));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, recipe !== undefined && recipe && generateRecipeJSX(recipe), recipe === false && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.missingContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 72\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.missingText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 92\n    }\n  }, \" Sorry, this recipe was not found\"))), recipe !== undefined && /*#__PURE__*/React.createElement(Button, {\n    className: classes.missingBackButton,\n    variant: \"contained\",\n    onClick: () => history.push(\"/\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Back\"));\n};\n\nexport default Recipe;","map":{"version":3,"sources":["/Users/cbuckley/Desktop/recipe-app/src/Recipe.js"],"names":["React","useEffect","useState","Typography","Link","CircularProgress","Button","toFirstCharUppercase","axios","mockData","makeStyles","useStyles","missingContainer","width","margin","marginTop","missingText","textAlign","fontFamily","fontSize","missingBackButton","backgroundColor","display","Recipe","props","classes","match","history","params","recipeID","recipe","setRecipe","get","then","response","data","catch","error","generateRecipeJSX","name","ingredients","directions","image","fullImageUrl","height","undefined","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,gBAA3B,EAA6CC,MAA7C,QAA2D,mBAA3D;AACA,SAASC,oBAAT,QAAqC,aAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAIA,MAAMC,SAAS,GAAGD,UAAU,CAAC,OAAO;AAClCE,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,KAAK,EAAE,OADS;AAEhBC,IAAAA,MAAM,EAAE,MAFQ;AAGhBC,IAAAA,SAAS,EAAE;AAHK,GADgB;AAMlCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAE,QADA;AAEXC,IAAAA,UAAU,EAAE,WAFD;AAGXC,IAAAA,QAAQ,EAAE;AAHC,GANqB;AAWlCC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,eAAe,EAAE,WADA;AAEjBP,IAAAA,MAAM,EAAE,MAFS;AAGjBQ,IAAAA,OAAO,EAAE,MAHQ;AAIjBP,IAAAA,SAAS,EAAE;AAJM;AAXe,CAAP,CAAD,CAA5B;;AAoBA,MAAMQ,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAMC,OAAO,GAAGd,SAAS,EAAzB;AACA,QAAM;AAAEe,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBH,KAA3B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAaF,KAAnB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAeD,MAArB;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsB7B,QAAQ,CAACO,QAAD,CAApC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CACFwB,GADH,CACOH,QADP,EAEGI,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAWD,QAAjB;AACAH,MAAAA,SAAS,CAACI,IAAD,CAAT;AACD,KALH,EAMGC,KANH,CAMS,UAAUC,KAAV,EAAiB;AACtBN,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KARH;AASD,GAVQ,EAUN,CAACF,QAAD,CAVM,CAAT;;AAYA,QAAMS,iBAAiB,GAAIR,MAAD,IAAY;AACpC,UAAM;AAAES,MAAAA,IAAF;AAAQC,MAAAA,WAAR;AAAqBC,MAAAA,UAArB;AAAiCC,MAAAA;AAAjC,QAA0CZ,MAAhD;AACA,UAAMa,YAAY,GAAG;AAACD,MAAAA;AAAD,KAArB;AACA,wBACE,uDACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA2BH,IAA3B,MADF,eAEE;AAAK,MAAA,KAAK,EAAE;AAAE1B,QAAAA,KAAK,EAAE,OAAT;AAAkB+B,QAAAA,MAAM,EAAE;AAA1B,OAAZ;AAAiD,MAAA,GAAG,EAAED,YAAtD;AAAoE,MAAA,GAAG,EAAEA,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA0BH,WAA1B,MAHF,eAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAyBC,UAAzB,MAJF,CADF;AAQD,GAXD;;AAYA,sBACE,0CACGX,MAAM,KAAKe,SAAX,IAAwBf,MAAxB,IAAkCQ,iBAAiB,CAACR,MAAD,CADtD,EAEGA,MAAM,KAAK,KAAX,iBAAoB,uDAAE;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACb,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0C,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1C,eAA8D,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEa,OAAO,CAACT,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAA9D,CAAF,CAFvB,EAGGc,MAAM,KAAKe,SAAX,iBACC,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEpB,OAAO,CAACL,iBAA3B;AAA8C,IAAA,OAAO,EAAC,WAAtD;AAAkE,IAAA,OAAO,EAAE,MAAMO,OAAO,CAACmB,IAAR,CAAa,GAAb,CAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,CADF;AAWD,CA1CD;;AA6CA,eAAevB,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Typography, Link, CircularProgress, Button } from \"@material-ui/core\";\nimport { toFirstCharUppercase } from \"./constants\";\nimport axios from \"axios\";\nimport mockData from './mockData';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\n\nconst useStyles = makeStyles(() => ({\n  missingContainer: {\n    width: '500px',\n    margin: 'auto',\n    marginTop: '10%',\n  },\n  missingText: {\n    textAlign: 'center',\n    fontFamily: 'helvetica',\n    fontSize: '32px',\n  },\n  missingBackButton: {\n    backgroundColor: 'lightgrey',\n    margin: 'auto',\n    display: 'flex',\n    marginTop: '2rem',\n  },\n}));\n\n\nconst Recipe = (props) => {\n  const classes = useStyles();\n  const { match, history } = props;\n  const { params } = match;\n  const { recipeID } = params;\n  const [recipe, setRecipe] = useState(mockData);\n\n  useEffect(() => {\n    axios\n      .get(recipeID)\n      .then(function (response) {\n        const { data } = response;\n        setRecipe(data);\n      })\n      .catch(function (error) {\n        setRecipe(false);\n      });\n  }, [recipeID]);\n\n  const generateRecipeJSX = (recipe) => {\n    const { name, ingredients, directions, image} = recipe;\n    const fullImageUrl = {image};\n    return (\n      <>\n        <Typography variant=\"h3\"> {name} </Typography>\n        <img style={{ width: \"300px\", height: \"300px\" }} src={fullImageUrl} alt={fullImageUrl} />\n        <Typography>Ingredients: {ingredients} </Typography>\n        <Typography>Directions: {directions} </Typography>\n      </>\n    );\n  };\n  return (\n    <>\n      {recipe !== undefined && recipe && generateRecipeJSX(recipe)}\n      {recipe === false && <><div className={classes.missingContainer}><CircularProgress /><Typography className={classes.missingText}> Sorry, this recipe was not found</Typography></div></>}\n      {recipe !== undefined && (\n        <Button className={classes.missingBackButton} variant=\"contained\" onClick={() => history.push(\"/\")}>\n          Back\n        </Button>\n      )}\n    </>\n  );\n};\n\n\nexport default Recipe;"]},"metadata":{},"sourceType":"module"}