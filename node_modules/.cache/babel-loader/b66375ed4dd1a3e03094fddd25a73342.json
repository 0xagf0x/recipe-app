{"ast":null,"code":"var _jsxFileName = \"/Users/cbuckley/Desktop/recipe-app/src/Components/NewRecipe/NewRecipeModal.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 300,\n    backgroundColor: '#e8e8e8',\n    border: '2px solid #000',\n    borderRadius: \"10px\",\n    boxShadow: theme.shadows[5]\n  },\n  formRow: {\n    textAlign: 'center',\n    margin: '10px 0px',\n    padding: '10px 0px',\n    width: '100%'\n  },\n  buttonRow: {\n    backgroundColor: 'grey',\n    display: 'flex',\n    padding: '20px 0px',\n    justifyContent: 'space-around'\n  }\n}));\n\nfunction NewRecipeModal() {\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleSubmit = () => {\n    alert('submit modal test');\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const modalForm = /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"form\",\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-required\",\n    label: \"Required\",\n    defaultValue: \"Dish Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"outlined-required\",\n    label: \"Ingredients\",\n    variant: \"outlined\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"outlined-required\",\n    label: \"Directions\",\n    variant: \"outlined\",\n    className: classes.directions,\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Image\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, \"New\"), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, modalForm));\n}\n\nexport default NewRecipeModal;","map":{"version":3,"sources":["/Users/cbuckley/Desktop/recipe-app/src/Components/NewRecipe/NewRecipeModal.js"],"names":["React","makeStyles","Modal","TextField","Button","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","border","borderRadius","boxShadow","shadows","formRow","textAlign","margin","padding","buttonRow","display","justifyContent","NewRecipeModal","classes","modalStyle","useState","open","setOpen","handleOpen","handleSubmit","alert","handleClose","modalForm","root","directions"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 300,\n    backgroundColor: '#e8e8e8',\n    border: '2px solid #000',\n    borderRadius: \"10px\",\n    boxShadow: theme.shadows[5],\n  },\n  formRow: {\n    textAlign: 'center',\n    margin: '10px 0px',\n    padding: '10px 0px',\n    width: '100%',\n  },\n  buttonRow: {\n    backgroundColor: 'grey',\n    display: 'flex',\n    padding: '20px 0px',\n    justifyContent: 'space-around',\n  },\n}));\n\nfunction NewRecipeModal() {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleSubmit = () => {\n    alert('submit modal test');\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const modalForm = (\n    <div style={modalStyle} className={classes.paper}>\n      <form id=\"form\" className={classes.root} noValidate autoComplete=\"off\">\n        <div className={classes.formRow}>\n          <TextField required id=\"standard-required\" label=\"Required\" defaultValue=\"Dish Name\" />\n        </div>\n        <div className={classes.formRow}>\n          <TextField\n            required\n            id=\"outlined-required\"\n            label=\"Ingredients\"\n            variant=\"outlined\"\n            defaultValue=\"\"\n          />\n        </div>\n        <div className={classes.formRow}>\n          <TextField\n            required\n            id=\"outlined-required\"\n            label=\"Directions\"\n            variant=\"outlined\"\n            className={classes.directions}\n            defaultValue=\"\"\n          />\n        </div>\n        <div className={classes.formRow}>\n          <Button\n              variant=\"contained\"\n              component=\"label\"\n          >\n            Image\n            <input\n              type=\"file\"\n              style={{ display: \"none\" }}\n            />\n          </Button>\n        </div>\n        <div> \n          <div className={classes.buttonRow}>\n            <Button \n            color=\"primary\"\n            onClick={handleSubmit}\n            >\n              Add\n            </Button>\n            <Button \n            color=\"secondary\"\n            onClick={handleClose}\n            >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleOpen}>\n        New\n      </button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form\"\n      >\n        {modalForm}\n      </Modal>\n    </div>\n  );\n}\n\nexport default NewRecipeModal;"]},"metadata":{},"sourceType":"module"}