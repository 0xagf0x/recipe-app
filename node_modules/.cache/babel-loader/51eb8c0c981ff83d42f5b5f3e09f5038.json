{"ast":null,"code":"var _jsxFileName = \"/Users/cbuckley/Desktop/recipe-app/src/Components/NewRecipe/NewRecipeModal.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 300,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    borderRadius: \"10px\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  formRow: {\n    textAlign: 'center',\n    margin: '10px',\n    padding: '10px'\n  }\n}));\n\nfunction NewRecipeModal() {\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const modalForm = /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"form\",\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-required\",\n    label: \"Required\",\n    defaultValue: \"Dish Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"outlined-required\",\n    label: \"Ingredients\",\n    variant: \"outlined\",\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"outlined-required\",\n    label: \"Directions\",\n    variant: \"outlined\",\n    className: classes.directions,\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    component: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Image\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, \"New\"), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, modalForm));\n}\n\nexport default NewRecipeModal;","map":{"version":3,"sources":["/Users/cbuckley/Desktop/recipe-app/src/Components/NewRecipe/NewRecipeModal.js"],"names":["React","makeStyles","Modal","TextField","Button","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","borderRadius","boxShadow","shadows","padding","spacing","formRow","textAlign","margin","NewRecipeModal","classes","modalStyle","useState","open","setOpen","handleOpen","handleClose","modalForm","root","directions","display","buttonRow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 300,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    borderRadius: \"10px\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  formRow: {\n    textAlign: 'center',\n    margin: '10px',\n    padding: '10px',\n  }\n}));\n\nfunction NewRecipeModal() {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const modalForm = (\n    <div style={modalStyle} className={classes.paper}>\n      <form id=\"form\" className={classes.root} noValidate autoComplete=\"off\">\n        <div className={classes.formRow}>\n          <TextField required id=\"standard-required\" label=\"Required\" defaultValue=\"Dish Name\" />\n        </div>\n        <div className={classes.formRow}>\n          <TextField\n            required\n            id=\"outlined-required\"\n            label=\"Ingredients\"\n            variant=\"outlined\"\n            defaultValue=\"\"\n          />\n        </div>\n        <div className={classes.formRow}>\n          <TextField\n            required\n            id=\"outlined-required\"\n            label=\"Directions\"\n            variant=\"outlined\"\n            className={classes.directions}\n            defaultValue=\"\"\n          />\n        </div>\n        <div className={classes.formRow}>\n          <Button\n              variant=\"contained\"\n              component=\"label\"\n          >\n            Image\n            <input\n              type=\"file\"\n              style={{ display: \"none\" }}\n            />\n          </Button>\n        </div>\n        <div className={classes.formRow}> \n          <div className={classes.buttonRow}>\n            <Button variant=\"contained\" color=\"primary\">\n              Add\n            </Button>\n            <Button \n            variant=\"contained\" \n            color=\"secondary\"\n            onClick={handleClose}\n            >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleOpen}>\n        New\n      </button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form\"\n      >\n        {modalForm}\n      </Modal>\n    </div>\n  );\n}\n\nexport default NewRecipeModal;"]},"metadata":{},"sourceType":"module"}