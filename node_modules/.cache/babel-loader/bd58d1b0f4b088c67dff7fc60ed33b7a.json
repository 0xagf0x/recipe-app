{"ast":null,"code":"var _jsxFileName = \"/Users/cbuckley/react-apps/14-pokedex/src/PokeDex.js\";\nimport React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport mockData from './mockData';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActions, CardContent, CardMedia, CircularProgress, Grid, Typography } from '@material-ui/core';\nconst useStyles = makeStyles({\n  card_root: {\n    minWidth: 275,\n    borderRadius: 0\n  },\n  card_actions: {\n    justifyContent: 'center'\n  },\n  media: {\n    height: 0,\n    paddingTop: '100%'\n  },\n  card_text: {\n    textAlign: 'center',\n    textDecoration: \"none\"\n  },\n  link: {\n    textDecoration: \"none\"\n  }\n});\n\nconst GetPokemonCard = pokemonId => {\n  const classes = useStyles();\n  const {\n    id,\n    name,\n    sprite\n  } = pokemonData[pokemonId];\n  console.log(pokemonData[`$(pokemonId)`]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    key: pokemonId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.card_actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card_root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"google.com\",\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: \"https://cdn.bulbagarden.net/upload/thumb/7/7e/006Charizard.png/1200px-006Charizard.png\",\n    title: \"pokemon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    component: \"h2\",\n    className: classes.card_text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, \"test\"))))));\n};\n\nconst PokeDex = () => {\n  const [pokemonData, setPokemonData] = useState(mockData);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), pokemonData ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, Object.keys(pokemonData).map(pokemonId => GetPokemonCard(pokemonId))) : /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default PokeDex;","map":{"version":3,"sources":["/Users/cbuckley/react-apps/14-pokedex/src/PokeDex.js"],"names":["React","useState","Navbar","mockData","makeStyles","Card","CardActions","CardContent","CardMedia","CircularProgress","Grid","Typography","useStyles","card_root","minWidth","borderRadius","card_actions","justifyContent","media","height","paddingTop","card_text","textAlign","textDecoration","link","GetPokemonCard","pokemonId","classes","id","name","sprite","pokemonData","console","log","PokeDex","setPokemonData","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport mockData from './mockData';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n    Card, \n    CardActions, \n    CardContent, \n    CardMedia, \n    CircularProgress,\n    Grid, \n    Typography,\n} from '@material-ui/core';\n\n\n\nconst useStyles = makeStyles({\n    card_root: {\n        minWidth: 275,\n        borderRadius: 0,\n    },\n    card_actions: {\n        justifyContent: 'center',\n    },\n    media: {\n        height: 0,\n        paddingTop: '100%', \n    }, \n    card_text: {\n        textAlign: 'center',\n        textDecoration: \"none\",\n    },\n    link: {\n        textDecoration: \"none\",\n    },\n  });\n\n\nconst GetPokemonCard = (pokemonId) => {\n    const classes = useStyles();\n    const {id, name, sprite} = pokemonData[pokemonId];\n\n    console.log(pokemonData[`$(pokemonId)`]);\n    \n    return (\n        <Grid item xs={12} sm={4}  key={pokemonId}>\n            <CardActions className={classes.card_actions}>\n                <Card className={classes.card_root} >\n                    <a href=\"google.com\" className={classes.link}>\n                        <CardContent>\n                            <CardMedia\n                                className={classes.media}\n                                image=\"https://cdn.bulbagarden.net/upload/thumb/7/7e/006Charizard.png/1200px-006Charizard.png\"\n                                title=\"pokemon\"\n                            />\n                            <Typography variant=\"h6\" component=\"h2\" className={classes.card_text}>\n                            test\n                            </Typography>\n                        </CardContent>\n                    </a>\n                </Card>\n            </CardActions>\n        </Grid>\n    )\n}  \n\nconst PokeDex = () => {\n    const [pokemonData, setPokemonData] = useState(mockData);\n    return (\n        <>\n            <Navbar />\n            {pokemonData ? (\n                <Grid container>\n                    {Object.keys(pokemonData).map((pokemonId) =>\n                        GetPokemonCard(pokemonId)\n                    )}\n                </Grid>\n            ) : (\n                <CircularProgress />\n            )}\n        </>\n    );\n}\n\nexport default PokeDex;\n"]},"metadata":{},"sourceType":"module"}